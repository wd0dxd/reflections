How did viewing a diff between two versions of a file help you see the bug that was introduced?

By comparing each file line by line and only outputing the lines that were changed it made finding errors easier.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

If you make mistakes you can restore to a previous version and try agina.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

The commits will be more logical, but you may forget to do them.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git works with interconnected files and needs to track changes made to all affected when a commit is made.

How can you use the commands git log and git diff to view the history of files?

git log will show a log of all the commits and using git  diff will show the actual changes between the commits.

How might using version control make you more confident to make changes that could break something?

You can always revert to the previous version of the code and you can compare the changes to see what went wrong.

Now that you have your workspace set up, what do you want to try using Git for?

Let's get programming.
